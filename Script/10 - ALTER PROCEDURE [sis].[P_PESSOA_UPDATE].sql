USE [STRAES_XM]
GO

/****** Object:  StoredProcedure [sis].[P_PESSOA_UPDATE]    Script Date: 19/08/2023 02:27:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER PROCEDURE [sis].[P_PESSOA_UPDATE] (
	@ID_PESSOA					INT,
	@ID_PESSOA_PLANO			INT,
	@ID_PESSOA_FILANTROPIA		INT,
	@MATRICULA					VARCHAR(10),
	@ID_CLASSIFICACAO			INT,
	@NOME						VARCHAR(100),
	@DT_NASCIMENTO				SMALLDATETIME,
	@ID_ATIVIDADE				INT,
	@ID_PLANO					INT,
	@PLANO_REFER_INICIO			CHAR(6),
	@PLANO_REFER_FIM			CHAR(6),
	@ID_FILANTROPIA				INT,
	@FILANTROPIA_REFER_INICIO	CHAR(6),
	@FILANTROPIA_REFER_FIM		CHAR(6),
	@ID_ESTADO_CIVIL			INTEGER,
	@ID_CIDADE					INTEGER,
	@PAI						VARCHAR(100),
	@MAE						VARCHAR(100),
	@PROFISSAO					VARCHAR(100),
	@CONJUGE					VARCHAR(100),
	@RAZAO_SOCIAL				VARCHAR(100),
	@LOGRADOURO					VARCHAR(40),
	@NUMERO						VARCHAR(10),
	@COMPLEMENTO				VARCHAR(20),
	@BAIRRO						VARCHAR(50),
	@CEP						VARCHAR(8),
	@DATA_ADMISSAO_TERREIRO		SMALLDATETIME,
	@DIGINA						VARCHAR(100),
	@ID_PADRINHO				INT,
	@PADRINHO_ORUNKO			VARCHAR(100),
	@USUARIO_OPERACAO			VARCHAR(20) )
AS
BEGIN
	DECLARE @QTDE			INT,
			@DIA			CHAR(2),
			@MES			CHAR(2),
			@ANO			CHAR(4),
			@QTDE_FIM		INT,
			@REFER			CHAR(6),
			@VENCIMENTO		CHAR(100),
			@VALOR			SMALLMONEY,
			@COUNT			INT,
			@ID_FINANCEIRO	INT

	SET NOCOUNT ON;

	BEGIN TRY
		-- PESSOA --
		BEGIN TRAN
			UPDATE [sis].[PESSOA] SET
				ID_CLASSIFICACAO		=@ID_CLASSIFICACAO,
				ID_ATIVIDADE			=@ID_ATIVIDADE,
				MATRICULA				=@MATRICULA,
				NOME					=@NOME,
				DT_NASCIMENTO			=@DT_NASCIMENTO,
				ID_ESTADO_CIVIL			=@ID_ESTADO_CIVIL,
				ID_CIDADE				=@ID_CIDADE,
				PAI						=@PAI,
				MAE						=@MAE,
				PROFISSAO				=@PROFISSAO,
				CONJUGE					=@CONJUGE,
				RAZAO_SOCIAL			=@RAZAO_SOCIAL,
				LOGRADOURO				=@LOGRADOURO,
				NUMERO					=@NUMERO,
				COMPLEMENTO				=@COMPLEMENTO,
				BAIRRO					=@BAIRRO,
				CEP						=@CEP,
				DATA_ADMISSAO_TERREIRO	=@DATA_ADMISSAO_TERREIRO,
				DIGINA					=@DIGINA,
				ID_PADRINHO				=@ID_PADRINHO,
				PADRINHO_ORUNKO			=@PADRINHO_ORUNKO,
				USUARIO_OPERACAO		=@USUARIO_OPERACAO,
				DATA_OPERACAO			=GETDATE()
			WHERE ID_PESSOA	=@ID_PESSOA
		COMMIT TRAN

		-- PESSOA_PLANO --
		BEGIN TRAN
			IF @ID_PLANO > 0
				BEGIN
					IF @ID_PESSOA_PLANO > 0
						BEGIN
							UPDATE [sis].[PESSOA_PLANO] SET
								ID_PESSOA 		 = @ID_PESSOA,
								ID_PLANO 		 = @ID_PLANO,
								REFER_INICIO	 = @PLANO_REFER_INICIO,
								REFER_FIM		 = @PLANO_REFER_FIM,
								USUARIO_OPERACAO = @USUARIO_OPERACAO,
								DATA_OPERACAO 	 = GETDATE()
							WHERE ID_PESSOA_PLANO = @ID_PESSOA_PLANO
						END
					ELSE
						BEGIN
							INSERT INTO [sis].[PESSOA_PLANO] ( ID_PESSOA, ID_PLANO, REFER_INICIO, REFER_FIM, USUARIO_OPERACAO, DATA_OPERACAO)
							VALUES ( @ID_PESSOA, @ID_PLANO, @PLANO_REFER_INICIO, @PLANO_REFER_FIM, @USUARIO_OPERACAO, GETDATE())
						END
				END
		COMMIT TRAN

		-- PESSOA_FILANTROPIA --
		BEGIN TRAN
			IF @ID_FILANTROPIA > 0
				BEGIN
					IF @ID_PESSOA_FILANTROPIA > 0
						BEGIN
							UPDATE [sis].[PESSOA_FILANTROPIA] SET
								ID_PESSOA 		 = @ID_PESSOA,
								ID_FILANTROPIA 	 = @ID_FILANTROPIA,
								REFER_INICIO	 = @FILANTROPIA_REFER_INICIO,
								REFER_FIM		 = @FILANTROPIA_REFER_FIM,
								USUARIO_OPERACAO = @USUARIO_OPERACAO,
								DATA_OPERACAO 	 = GETDATE()
							WHERE ID_PESSOA_FILANTROPIA = @ID_PESSOA_FILANTROPIA
						END
					ELSE
						BEGIN
							INSERT INTO [sis].[PESSOA_FILANTROPIA] ( ID_PESSOA, ID_FILANTROPIA, REFER_INICIO, REFER_FIM, USUARIO_OPERACAO, DATA_OPERACAO)
							VALUES ( @ID_PESSOA, @ID_FILANTROPIA, @FILANTROPIA_REFER_INICIO, @FILANTROPIA_REFER_FIM, @USUARIO_OPERACAO, GETDATE())
						END
				END
		COMMIT TRAN

		-- FINANCEIRO --
		BEGIN TRAN
			SET @ANO = SUBSTRING( @PLANO_REFER_INICIO, 3, 4 )

			DELETE FROM [sis].[FINANCEIRO] WHERE ID_PESSOA = @ID_PESSOA AND SUBSTRING( REFER, 3, 4 ) = @ANO

			SET @QTDE	  = CAST( SUBSTRING( @PLANO_REFER_INICIO, 1, 2 ) AS INT )
			SET @VALOR	  = ( SELECT VALOR FROM [sis].[PLANO] WHERE ID_PLANO =@ID_PLANO )
			SET @QTDE_FIM = CAST( SUBSTRING( @PLANO_REFER_FIM, 1, 2 ) AS INT )

			WHILE @QTDE <= @QTDE_FIM
				BEGIN
					SET @MES		= REPLICATE( '0', 2 - LEN( CAST( @QTDE AS VARCHAR(2) ) ) ) + CAST( @QTDE AS VARCHAR(2) )
					SET @DIA		= ( SELECT COALESCE( REPLICATE( '0', 2 - LEN( FIN_DIA_VENCIMENTO ) ) + FIN_DIA_VENCIMENTO, '10' ) FROM [cfg].[CONFIGURACAO] WHERE ATIVO = 1 )
					SET @REFER		= @MES + @ANO
					SET @VENCIMENTO = CAST(((@ANO + '-' + @DIA + '-' + @MES) + ' 00:00:00') AS SMALLDATETIME)

					SET @COUNT = ( SELECT COUNT(ID_FINANCEIRO) FROM [sis].[FINANCEIRO] WHERE ID_PESSOA =@ID_PESSOA AND REFER = @REFER )

					IF @COUNT = 0
						SET @ID_FINANCEIRO = 0
					ELSE
						SET @ID_FINANCEIRO = ( SELECT ID_FINANCEIRO FROM [sis].[FINANCEIRO] WHERE ID_PESSOA =@ID_PESSOA AND REFER = @REFER )

					IF @ID_FINANCEIRO = 0
						BEGIN
							EXEC [sis].[P_FINANCEIRO_INSERT] @ID_PESSOA, @REFER, @VENCIMENTO, @VALOR, NULL, NULL, @USUARIO_OPERACAO
						END
					ELSE
						BEGIN
							EXEC [sis].[P_FINANCEIRO_UPDATE] @ID_FINANCEIRO, @ID_PESSOA, @REFER, @VENCIMENTO, @VALOR, NULL, NULL, @USUARIO_OPERACAO
						END

					SET @QTDE = @QTDE + 1
				END
		COMMIT TRAN
	END TRY

	BEGIN CATCH
		SELECT
			ERROR_NUMBER() AS ERRORNUMBER,
			ERROR_SEVERITY() AS ERRORSEVERITY,
			ERROR_STATE() AS ERRORSTATE,
			ERROR_PROCEDURE() AS ERRORPROCEDURE,
			ERROR_LINE() AS ERRORLINE,
			ERROR_MESSAGE() AS ERRORMESSAGE;

		ROLLBACK TRAN
	END CATCH

	SET NOCOUNT OFF;
END
GO


