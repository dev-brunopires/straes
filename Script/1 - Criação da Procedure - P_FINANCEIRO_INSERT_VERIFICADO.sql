CREATE PROCEDURE [sis].[P_FINANCEIRO_INSERT_VERIFICADO] (
	@ID_PESSOA			INT,
	@REFER				CHAR(6),
	@DT_VENCIMENTO		SMALLDATETIME,
	@VL_REFER			SMALLMONEY,
	@VL_DESCONTO		SMALLMONEY,
	@DT_PAGAMENTO		SMALLDATETIME,
	@VL_PAGO			SMALLMONEY,
	@USUARIO_OPERACAO	VARCHAR(20)
)
AS
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		BEGIN TRAN

		DECLARE @EXISTE_DEBITO	INT,
				@EXISTE_PAGTO	INT

		--VERIFICA SE DÉBITO FOI GERADO PARA A PESSOA E A REFERÊNCIA
		SET @EXISTE_DEBITO = (SELECT COUNT(*) FROM [sis].[FINANCEIRO] WHERE ID_PESSOA = @ID_PESSOA AND REFER =@REFER)
				
		IF @EXISTE_DEBITO = 1
			BEGIN
				--SE O DÉBITO EXISTIR, VERIFICA SE O DÉBITO ESTÁ PAGO
				SET @EXISTE_PAGTO = (SELECT COUNT(*) FROM [sis].[FINANCEIRO] WHERE ID_PESSOA = @ID_PESSOA AND REFER =@REFER AND DT_PAGAMENTO IS NOT NULL AND VL_PAGO IS NOT NULL)
				
				--SE O DÉBITO NÃO ESTIVER PAGO, REMOVE PARA INCLUSÃO COM O NOVO VALOR
				IF @EXISTE_PAGTO = 0
					BEGIN
						DELETE FROM [sis].[FINANCEIRO]
						WHERE ID_PESSOA =@ID_PESSOA
						AND REFER = @REFER
					END

				INSERT INTO [sis].[FINANCEIRO] ( ID_PESSOA, MES, ANO, REFER, DT_VENCIMENTO, VL_REFER, VL_DESCONTO, DT_PAGAMENTO, VL_PAGO, USUARIO_OPERACAO, DATA_OPERACAO )
				VALUES ( @ID_PESSOA, SUBSTRING(@REFER, 1, 2), SUBSTRING(@REFER, 3, 4), @REFER, @DT_VENCIMENTO, @VL_REFER, @VL_DESCONTO, @DT_PAGAMENTO, @VL_PAGO, @USUARIO_OPERACAO,  GETDATE() )
			END		

		COMMIT TRAN
	END TRY

	BEGIN CATCH
		SELECT
			ERROR_NUMBER() AS ERRORNUMBER,
			ERROR_SEVERITY() AS ERRORSEVERITY,
			ERROR_STATE() AS ERRORSTATE,
			ERROR_PROCEDURE() AS ERRORPROCEDURE,
			ERROR_LINE() AS ERRORLINE,
			ERROR_MESSAGE() AS ERRORMESSAGE;

		ROLLBACK TRAN
	END CATCH

	SET NOCOUNT OFF;
END
GO